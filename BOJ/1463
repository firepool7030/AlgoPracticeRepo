# BOJ_1463_silver_3
# bottom-up dynamic programming

n = int(input())

# n + 1 길이의 메모이제이션 배열 0으로 초기화
dp = [0] * (n + 1)

for i in range (2, n + 1):
    # dp[i]는 바로 이전의 메모이제이션 값보다 1 큰 숫자로 초기화
    dp[i] = dp[i - 1] + 1
    if i % 2 == 0: # 만약 dp[i]가 2로 나뉘어 지면 dp[i]와 (dp[i]/2 + 1)의 최솟값으로 설정
        dp[i] = min(dp[i], dp[i//2] + 1)
    if i % 3 == 0: # 만약 dp[i]가 3로 나뉘어 지면 dp[i]와 (dp[i]/3 + 1)의 최솟값으로 설정
        dp[i] = min(dp[i], dp[i//3] + 1)

print(dp[n])
