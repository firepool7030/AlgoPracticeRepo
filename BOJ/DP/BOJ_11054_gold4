# BOJ_11054_gold4
import sys
input = sys.stdin.readline

# 리스트 입력
n = int(input())
arr = list(map(int, input().split()))

# 리스트의 오름차순을 계산하는 함수 정의
def count_asc(lst: list):
    count = [1] * n # 오름차순 개수 저장하는 리스트 정의
    for i, x in enumerate(lst):
        for j in range(i):
            if lst[j] < x: # DP 방식을 이용해서 현재 원소의 가장 큰 오름차수 값 저장
                count[i] = max(count[i], count[j] + 1)
    return count

asc_count = count_asc(arr) # 오름차순 저장
desc_count = count_asc(arr[::-1])[::-1] # 내림차순 저장

max_count = max(sum(x) for x in zip(asc_count, desc_count)) # zip 함수를 사용해서 peak 지점 탐색 후 최대 바이토닉 수열 지점 저장
print(max_count - 1) # 최대 바이토닉 수열 출력
