# BOJ_11054_gold4
import sys
input = sys.stdin.readline

# 리스트 길이와 리스트 입력
n = int(input())
arr = list(map(int, input().split()))
rev_arr = arr[::-1]

# 오름차순 순서와 내림차순 순서를 저장하는 리스트 저장
ascending_count = [1] * n
descending_count = [1] * n
max_count = 0

# DP 이중반복문
for i in range(n): # 전체 리스트를 순회하면서
    x1 = arr[i]
    x2 = rev_arr[i]
    for j in range(i): # 최대 오름차순 저장
        if arr[j] < x1:
            ascending_count[i] = max(ascending_count[i], ascending_count[j]+1)
        if rev_arr[j] < x2: # 리스트를 역으로 순회하면서 최대 내림차순 저장
            descending_count[i] = max(descending_count[i], descending_count[j]+1)

descending_count = descending_count[::-1] # 최대 내림차순을 역순에서 순행으로 재정렬

for i in range(n):
    max_count = max(max_count, ascending_count[i] + descending_count[i])
print(max_count - 1) # 최대 바이토닉 수열 길이 출력
